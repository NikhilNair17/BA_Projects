CREATE TABLE LOCATION (
  Location_ID INT PRIMARY KEY,
  City VARCHAR(50)
);

INSERT INTO LOCATION (Location_ID, City)
VALUES (122, 'New York'),
       (123, 'Dallas'),
       (124, 'Chicago'),
       (167, 'Boston');


  CREATE TABLE DEPARTMENT (
  Department_Id INT PRIMARY KEY,
  Name VARCHAR(50),
  Location_Id INT,
  FOREIGN KEY (Location_Id) REFERENCES LOCATION(Location_ID)
);


INSERT INTO DEPARTMENT (Department_Id, Name, Location_Id)
VALUES (10, 'Accounting', 122),
       (20, 'Sales', 124),
       (30, 'Research', 123),
       (40, 'Operations', 167);

CREATE TABLE JOB
(JOB_ID INT PRIMARY KEY,
DESIGNATION VARCHAR(20))

INSERT  INTO JOB VALUES
(667, 'CLERK'),
(668,'STAFF'),
(669,'ANALYST'),
(670,'SALES_PERSON'),
(671,'MANAGER'),
(672, 'PRESIDENT')


CREATE TABLE EMPLOYEE
(EMPLOYEE_ID INT,
LAST_NAME VARCHAR(20),
FIRST_NAME VARCHAR(20),
MIDDLE_NAME CHAR(1),
JOB_ID INT FOREIGN KEY
REFERENCES JOB(JOB_ID),
MANAGER_ID INT,
HIRE_DATE DATE,
SALARY INT,
COMM INT,
DEPARTMENT_ID  INT FOREIGN KEY
REFERENCES DEPARTMENT(DEPARTMENT_ID))

INSERT INTO EMPLOYEE VALUES
(7369,'SMITH','JOHN','Q',667,7902,'17-DEC-84',800,NULL,20),
(7499,'ALLEN','KEVIN','J',670,7698,'20-FEB-84',1600,300,30),
(7505,'DOYLE','JEAN','K',671,7839,'04-APR-85',2850,NULl,30),
(7506,'DENNIS','LYNN','S',671,7839,'15-MAY-85',2750,NULL,30),
(7507,'BAKER','LESLIE','D',671,7839,'10-JUN-85',2200,NULL,40),
(7521,'WARK','CYNTHIA','D',670,7698,'22-FEB-85',1250,500,30)


--1. List all the employee details.
select * from EMPLOYEE;
--2. List all the department details.
select * from DEPARTMENT;
--3. List all job details.
select * from JOB;
--4. List all the locations.
select * from LOCATION;
--5. List out the First Name, Last Name, Salary, Commission for all Employees.
select FIRST_NAME,LAST_NAME,SALARY,COMM from EMPLOYEE;
--6. List out the Employee ID, Last Name, Department ID for all employees and alias
--Employee ID as "ID of the Employee", Last Name as "Name of the Employee", Department ID as "Dep_id".
select EMPLOYEE_ID as "ID of the Employee",LAST_NAME as "Name of the Employee",DEPARTMENT_id as Dep_id from EMPLOYEE;
--7. List out the annual salary of the employees with their names only.
select SALARY,FIRST_NAME +' '+LAST_NAME as NAME_ from EMPLOYEE;


--1. List the details about "Smith".
select * from EMPLOYEE where LAST_NAME='Smith';
--2. List out the employees who are working in department 20.
select * from EMPLOYEE where DEPARTMENT_ID=20;
--3. List out the employees who are earning salary between 2000 and 3000.
select * from EMPLOYEE where salary between 2000 and 3000;
--4. List out the employees who are working in department 10 or 20.
select * from EMPLOYEE where DEPARTMENT_ID IN (10,20);
--5. Find out the employees who are not working in department 10 or 30.
select * from EMPLOYEE where DEPARTMENT_ID NOT IN (10,30);
--6. List out the employees whose name starts with 'L'.
select * from EMPLOYEE where FIRST_NAME like'L%';
--7. List out the employees whose name starts with 'L' and ends with 'E'.
select * from EMPLOYEE where FIRST_NAME like 'L%E';
--8. List out the employees whose name length is 4 and start with 'J'.
select * from EMPLOYEE where FIRST_NAME like 'J___';
select * from EMPLOYEE where LEN(FIRST_NAME) = 4 and FIRST_NAME like'J%';
--9. List out the employees who are working in department 30 and draw the salaries more than 2500.
select * from EMPLOYEE where DEPARTMENT_id =30 and salary >2500;
--10. List out the employees who are not receiving commission.
select * from EMPLOYEE where COMM is NULL;

--List out the Employee ID and Last Name in ascending order based on the Employee ID.
select EMPLOYEE_ID,LAST_NAME from EMPLOYEE order by EMPLOYEE_ID asc;
--2. List out the Employee ID and Name in descending order based on salary.
select Employee_ID,FIRST_NAME+' '+LAST_NAME as NAME from EMPLOYEE order by salary asc;
--3. List out the employee details according to their Last Name in ascending-order.
select * from EMPLOYEE order by LAST_NAME asc;
--4. List out the employee details according to their Last Name in ascending order and then Department ID in descending order
select * from EMPLOYEE order by LAST_NAME asc , DEPARTMENT_ID desc;

--1. List out the department wise maximum salary, minimum salary and average salary of the employees.
select MAX(salary) as MAX_,MIN(salary) as MIN_,AVG(salary) as AVG_,DEPARTMENT_ID from EMPLOYEE group by DEPARTMENT_ID;
--2. List out the job wise maximum salary, minimum salary and average salary of the employees.
select MAX(salary) as MAX_,MIN(salary) as MIN_,AVG(salary) as AVG_,JOB_ID from EMPLOYEE group by JOB_ID;
--3. List out the number of employees who joined each month in ascending order.
select count(Employee_id) as EMPLOYEE_COUNT,DATENAME(Month,HIRE_DATE) as Join_Month from EMPLOYEE group by  DATENAME(Month,HIRE_DATE) order by EMPLOYEE_COUNT;
--4. List out the number of employees for each month and year in ascending order based on the year and month.
select count(Employee_id) as EMPLOYEE_COUNT,DATEPART(year,HIRE_DATE) as Join_Year,DATEPART(Month,HIRE_DATE) as Join_Month from EMPLOYEE group by  DATEPART(Month,HIRE_DATE),DATEPART(year,HIRE_DATE) order by Join_Year,Join_Month;
--5. List out the Department ID having at least four employees.
select DEPARTMENT_ID,count(*) as EMPLOYEE_COUNT from EMPLOYEE group by department_id having count(*) >3;
--6. How many employees joined in February month.
select count(*) as employee_count,datename(month,HIRE_DATE) as Month_ from EMPLOYEE where  datepart(month,hire_date) =2  group by datename(month,hire_date);
--7. How many employees joined in May or June month.
select count(*) as EMP_count from EMPLOYEE where datepart(month,hire_date) in (5,6) ;
--8. How many employees joined in 1985?
select count(*) as EMP_JOINED from EMPLOYEE where datepart(year,HIRE_DATE) = 1985;
--9. How many employees joined each month in 1985?
select count(*) as EMP_JOINED ,datepart(month,hire_date) as Months_1985 from EMPLOYEE where datepart(year,HIRE_DATE) = 1985 group by datepart(month,hire_date);
--10. How many employees were joined in April 1985?
select count(*) as EMP_count from EMPLOYEE where datepart(month,hire_date) =4 and datepart(year,HIRE_DATE) =1985;
--11. Which is the Department ID having greater than or equal to 3 employees joining in April 1985?
select DEPARTMENT_ID from EMPLOYEE  where datepart(month,hire_date) =4 and datepart(year,HIRE_DATE) =1985 group by DEPARTMENT_ID having  count(*)>=3; 



--1. List out employees with their department names.
select EMPLOYEE_ID,FIRST_NAME+' '+LAST_NAME as Name_,NAME as DEPT_ from EMPLOYEE as E inner join DEPARTMENT as d on e.DEPARTMENT_ID=d.Department_Id;
--2. Display employees with their designations.
select EMPLOYEE_ID,FIRST_NAME+' '+LAST_NAME as Name_,Designation from EMPLOYEE as E inner join JOB as j on e.JOB_ID=j.Job_ID;
--3. Display the employees with their department names and city.
select EMPLOYEE_ID,FIRST_NAME+' '+LAST_NAME as Name_,Name as DEPT_,City from EMPLOYEE as E inner join DEPARTMENT as D on E.DEPARTMENT_ID=D.Department_Id join Location as L on D.Location_Id=L.Location_ID;
--4. How many employees are working in different departments? Display with department names.
select count(EMPLOYEE_ID) as Count_of_Emp , Name as DEPT_Name from EMPLOYEE as E join DEPARTMENT as d on e.DEPARTMENT_ID=d.Department_Id group by name;
--5. How many employees are working in the sales department?
select count(EMPLOYEE_ID) as Count_of_Emp , Name as DEPT_Name from EMPLOYEE as E join DEPARTMENT as d on e.DEPARTMENT_ID=d.Department_Id where Name ='Sales' group by Name;
--6. Which is the department having greater than or equal to 3 employees and display the department names in ascending order.
select  Name as DEPT_Name from EMPLOYEE as E join DEPARTMENT as d on e.DEPARTMENT_ID=d.Department_Id group by D.Name having count(*)>=3 order by name asc;
--7. How many employees are working in 'Dallas'?
select count(*) as No_Of_Employees from EMPLOYEE as E inner join DEPARTMENT as D on E.DEPARTMENT_ID=D.Department_Id join Location as L on D.Location_Id=L.Location_ID where City='Dallas';
--8. Display all employees in sales or operation departments.
select * from EMPLOYEE as E join DEPARTMENT as d on E.DEPARTMENT_ID=D.Department_Id where Name in ('Sales','Operations');


--1. Display the employee details with salary grades. Use conditional statement to create a grade column.
select * ,case when salary > 2500 then 'Grade A'
when salary <=2500 and salary >1500 then 'Grade B' 
when salary <=1500 and salary >1000 then 'Grade C' 
else 'Grade D'
end as Salary_Grade From Employee;


--2. List out the number of employees grade wise. Use conditional statement to create a grade column.

select count(*) as Count_Of_Emp,case when salary > 2500 then 'Grade A'
when salary <=2500 and salary >1500 then 'Grade B' 
when salary <=1500 and salary >1000 then 'Grade C' 
else 'Grade D'
end as Salary_Grade From EMPLOYEE group by case when salary > 2500 then 'Grade A'
when salary <=2500 and salary >1500 then 'Grade B' 
when salary <=1500 and salary >1000 then 'Grade C' 
else 'Grade D' end;

--3. Display the employee salary grades and the number of employees between 2000 to 5000 range of salary.

select count(*) as Count_Of_Emp,case when salary > 2500 then 'Grade A'
when salary <=2500 and salary >1500 then 'Grade B' 
when salary <=1500 and salary >1000 then 'Grade C' 
else 'Grade D'
end as Salary_Grade From EMPLOYEE where salary between 2000 and 5000 group by case when salary > 2500 then 'Grade A'
when salary <=2500 and salary >1500 then 'Grade B' 
when salary <=1500 and salary >1000 then 'Grade C' 
else 'Grade D'end;




--1. List all the employee details.
select * from EMPLOYEE;
--2. List all the department details.
select * from DEPARTMENT;
--3. List all job details.
select * from JOB;
--4. List all the locations.
select * from LOCATION;

--1. Display the employees list who got the maximum salary.
select * from EMPLOYEE where salary in (select MAX(salary) from EMPLOYEE);
--2. Display the employees who are working in the sales department.
select E.* from EMPLOYEE as E join DEPARTMENT as d on e.DEPARTMENT_ID=d.Department_Id where name='Sales';
--3. Display the employees who are working as 'Clerk'.
select E.* from EMPLOYEE as E left join JOB as j on E.JOB_ID=J.Job_ID where Designation='Clerk';
--4. Display the list of employees who are living in 'Boston'.
select E.* from EMPLOYEE as e join DEPARTMENT as d on e.DEPARTMENT_ID=d.Department_Id join LOCATION as l on d.Location_Id=l.Location_ID where City='Boston';
--5. Find out the number of employees working in the sales department.
select count(*) as Emp_Count from EMPLOYEE as E join DEPARTMENT as D on E.DEPARTMENT_ID=D.Department_Id where name='Sales';
--6. Update the salaries of employees who are working as clerks on the basis of 10%.
update EMPLOYEE set salary = salary*1.1 where JOB_ID in (select JOB_ID from JOB where Designation ='Clerk')
--7. Display the second highest salary drawing employee details.
select * from EMPLOYEE where salary = (select MAX(SALARY) from EMPLOYEE where salary < (select MAX(SALARY) from EMPLOYEE));
--8. List out the employees who earn more than every employee in department 30.
select * from EMPLOYEE where  salary > all (select salary from EMPLOYEE where DEPARTMENT_ID=30);
--9. Find out which department has no employees.
select D.DEPARTMENT_ID from DEPARTMENT AS D left join EMPLOYEE as E on D.Department_Id=E.DEPARTMENT_ID where E.EMPLOYEE_ID IS NULL;
--10. Find out the employees who earn greater than the average salary for their department.
select * from EMPLOYEE as E where SALARY >  (select avg(salary) from EMPLOYEE where DEPARTMENT_ID=E.DEPARTMENT_ID)
